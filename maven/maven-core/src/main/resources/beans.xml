<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--配置扫描包-->
    <context:component-scan base-package="com.baibin.maven">
        <!--这里我们排除对controller的扫描-->
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>
    <!--数据源配置-->
    <context:property-placeholder location="classpath*:
    jdbc.properties"></context:property-placeholder>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="username" value="${jdbc.user_name}"></property>
        <property name="password" value="${jdbc.user_pass}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>

    <!--mybatis的session工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>

    <!--事务对象-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*List" propagation="NOT_SUPPORTED"/>
            <tx:method name="list" propagation="NOT_SUPPORTED"/>
            <tx:method name="*Query" propagation="NOT_SUPPORTED"/>
            <tx:method name="query" propagation="NOT_SUPPORTED"/>
            <tx:method name="*Save" propagation="REQUIRED"/>
            <tx:method name="save" propagation="REQUIRED"/>
            <tx:method name="modify" propagation="REQUIRED"/>
            <tx:method name="*Modify" propagation="REQUIRED"/>
            <tx:method name="*Delete" propagation="REQUIRED"/>
            <tx:method name="delete" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="interceptorPointCuts"
                      expression="execution(* com.baibin.maven..services..*.*(..))"/>
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="interceptorPointCuts"/>
    </aop:config>

    <bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.baibin.maven.rbac.daos.UserMapper"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>


    <bean id="casSingleSignOutFilter"
          class="org.jasig.cas.client.session.SingleSignOutFilter"/>

    <bean name="casAuthenticationFilter"
          class="org.jasig.cas.client.authentication.AuthenticationFilter"
          p:casServerLoginUrl="http://localhost:9999/cas/login"
          p:renew="false"
          p:gateway="false" p:serverName="http://localhost:8080"/>

    <bean name="casTicketValidationFilter"
          class="org.jasig.cas.client.validation.Cas10TicketValidationFilter"
          p:serverName="http://localhost:8080"
          p:redirectAfterValidation="true">
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas10TicketValidator">
                <!-- 对应于casServerUrlPrefix -->
                <constructor-arg index="0" value="http://localhost:9999/cas"/>
            </bean>
        </property>
    </bean>

    <bean id="casHttpServletRequestWrapperFilter"
          class="org.jasig.cas.client.util.HttpServletRequestWrapperFilter"/>

    <bean id="casAssertionThreadLocalFilter"
          class="org.jasig.cas.client.util.AssertionThreadLocalFilter"/>

</beans>